/**
 *
 * $Id$
 */
package eu.cloudwave.ude.fcore.FCORE.validation;

import eu.cloudwave.ude.fcore.FCORE.Attribute;
import eu.cloudwave.ude.fcore.FCORE.AttributeConstraint;
import eu.cloudwave.ude.fcore.FCORE.FeatureConstraint;
import eu.cloudwave.ude.fcore.FCORE.FeatureGroup;
import eu.cloudwave.ude.fcore.FCORE.FeatureToGroupConnection;
import eu.cloudwave.ude.fcore.FCORE.InfluenceFeature;
import eu.cloudwave.ude.fcore.FCORE.SingleFeatureConnection;
import eu.cloudwave.ude.fcore.FCORE.SolitaryFeature;
import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link eu.cloudwave.ude.fcore.FCORE.Feature}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface FeatureValidator {
    boolean validate();

    boolean validateFeatureGroups(EList<FeatureGroup> value);
    boolean validateName(String value);
    boolean validateSelected(boolean value);
    boolean validateSolitaryFeatures(EList<SolitaryFeature> value);
    boolean validateAttributeConstraints(EList<AttributeConstraint> value);
    boolean validateAttributes(EList<Attribute> value);
    boolean validateFeatureConstraintsStarts(EList<FeatureConstraint> value);

    boolean validateFeatureConstraintsEnds(EList<FeatureConstraint> value);

    boolean validateFeatureConstraintsStart(EList<FeatureConstraint> value);
    boolean validateFeatureConstraintsEnd(EList<FeatureConstraint> value);
    boolean validateInfluences(EList<InfluenceFeature> value);

    boolean validateOutgoingSingleFeatureConnections(EList<SingleFeatureConnection> value);

    boolean validateFeatureToGroupConnections(EList<FeatureToGroupConnection> value);
}
